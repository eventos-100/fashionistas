// FashionOS WhatsApp Integration Example
// This demonstrates how to integrate WAHA with FashionOS for event notifications

const axios = require('axios');

class FashionOSWhatsApp {
    constructor() {
        this.baseURL = 'http://localhost:3000/api';
        this.session = 'default';
        this.apiKey = 'fashionos-waha-key-2024';
    }

    // Send text message
    async sendMessage(phoneNumber, message) {
        try {
            const response = await axios.post(`${this.baseURL}/sendText`, {
                session: this.session,
                chatId: `${phoneNumber}@c.us`,
                text: message
            }, {
                headers: {
                    'Content-Type': 'application/json',
                    'X-Api-Key': this.apiKey
                }
            });
            
            console.log('‚úÖ Message sent successfully:', response.data);
            return response.data;
        } catch (error) {
            console.error('‚ùå Failed to send message:', error.response?.data || error.message);
            throw error;
        }
    }

    // Send image with caption
    async sendImage(phoneNumber, imageUrl, caption) {
        try {
            const response = await axios.post(`${this.baseURL}/sendImage`, {
                session: this.session,
                chatId: `${phoneNumber}@c.us`,
                file: { url: imageUrl },
                caption: caption
            }, {
                headers: {
                    'Content-Type': 'application/json',
                    'X-Api-Key': this.apiKey
                }
            });
            
            console.log('‚úÖ Image sent successfully:', response.data);
            return response.data;
        } catch (error) {
            console.error('‚ùå Failed to send image:', error.response?.data || error.message);
            throw error;
        }
    }

    // Check session status
    async getSessionStatus() {
        try {
            const response = await axios.get(`${this.baseURL}/sessions/${this.session}/status`);
            return response.data;
        } catch (error) {
            console.error('‚ùå Failed to get session status:', error.response?.data || error.message);
            throw error;
        }
    }

    // FashionOS specific methods

    // Send event registration confirmation
    async sendEventConfirmation(attendee) {
        const message = `üéâ ¬°Confirmaci√≥n de Registro - FashionOS!

Hola ${attendee.name},

Tu registro para el evento "${attendee.eventName}" ha sido confirmado.

üìÖ Fecha: ${attendee.eventDate}
üïê Hora: ${attendee.eventTime}
üìç Ubicaci√≥n: ${attendee.venue}
üé´ C√≥digo: ${attendee.ticketCode}

¬°Te esperamos! Para m√°s informaci√≥n visita: ${attendee.eventUrl}

FashionOS Team üí´`;

        return await this.sendMessage(attendee.phone, message);
    }

    // Send event reminder
    async sendEventReminder(attendee) {
        const message = `‚è∞ Recordatorio - ${attendee.eventName}

Hola ${attendee.name},

Te recordamos que tu evento es ma√±ana:

üìÖ ${attendee.eventDate}
üïê ${attendee.eventTime}
üìç ${attendee.venue}

¬°No olvides tu c√≥digo de entrada: ${attendee.ticketCode}

¬°Nos vemos pronto! üåü`;

        return await this.sendMessage(attendee.phone, message);
    }

    // Send sponsor welcome message
    async sendSponsorWelcome(sponsor) {
        const message = `ü§ù ¬°Bienvenido a FashionOS!

Estimado ${sponsor.contactName},

Gracias por ser parte de ${sponsor.eventName} como sponsor ${sponsor.tier}.

üìã Detalles de tu patrocinio:
‚Ä¢ Paquete: ${sponsor.packageName}
‚Ä¢ Beneficios: ${sponsor.benefits.join(', ')}
‚Ä¢ Contacto del evento: ${sponsor.eventManager}

Pronto recibir√°s m√°s informaci√≥n sobre la activaci√≥n de tu patrocinio.

¬°Gracias por apoyar la moda colombiana! üá®üá¥‚ú®`;

        return await this.sendMessage(sponsor.phone, message);
    }

    // Send designer showcase notification
    async sendDesignerShowcase(designer, showcase) {
        const imageUrl = showcase.posterUrl;
        const caption = `‚ú® ¬°Nuevo Showcase Disponible!

${designer.name} presenta: "${showcase.title}"

üì∏ ${showcase.description}

üîó Ver colecci√≥n completa: ${showcase.url}

#FashionOS #Dise√±oColombiano #${designer.brand}`;

        return await this.sendImage(designer.phone, imageUrl, caption);
    }

    // Broadcast to multiple recipients
    async broadcastMessage(phoneNumbers, message) {
        const results = [];
        
        for (const phone of phoneNumbers) {
            try {
                const result = await this.sendMessage(phone, message);
                results.push({ phone, success: true, result });
                
                // Add delay to avoid rate limiting
                await new Promise(resolve => setTimeout(resolve, 1000));
            } catch (error) {
                results.push({ phone, success: false, error: error.message });
            }
        }
        
        return results;
    }

    // Set up webhook for incoming messages
    async setupWebhook(webhookUrl) {
        try {
            const response = await axios.post(`${this.baseURL}/webhook`, {
                session: this.session,
                url: webhookUrl
            }, {
                headers: {
                    'Content-Type': 'application/json',
                    'X-Api-Key': this.apiKey
                }
            });
            
            console.log('‚úÖ Webhook configured:', response.data);
            return response.data;
        } catch (error) {
            console.error('‚ùå Failed to setup webhook:', error.response?.data || error.message);
            throw error;
        }
    }
}

// Usage examples
async function examples() {
    const whatsapp = new FashionOSWhatsApp();
    
    // Check if session is working
    try {
        const status = await whatsapp.getSessionStatus();
        console.log('Session status:', status);
        
        if (status.status !== 'WORKING') {
            console.log('‚ö†Ô∏è  Session not connected. Please scan QR code in dashboard.');
            return;
        }
    } catch (error) {
        console.log('‚ùå Cannot connect to WAHA. Make sure it\'s running.');
        return;
    }

    // Example 1: Event confirmation
    const attendee = {
        name: 'Mar√≠a Garc√≠a',
        phone: '573001234567', // Replace with actual number
        eventName: 'Bogot√° Fashion Week 2024',
        eventDate: '15 de Marzo, 2024',
        eventTime: '7:00 PM',
        venue: 'Centro de Convenciones √Ågora',
        ticketCode: 'BFW2024-001',
        eventUrl: 'https://fashionos.co/events/bfw2024'
    };
    
    // await whatsapp.sendEventConfirmation(attendee);

    // Example 2: Sponsor welcome
    const sponsor = {
        contactName: 'Carlos Rodr√≠guez',
        phone: '573009876543', // Replace with actual number
        eventName: 'Medell√≠n Fashion Show',
        tier: 'Gold',
        packageName: 'Paquete Oro',
        benefits: ['Logo en materiales', 'Stand premium', 'Networking VIP'],
        eventManager: 'Ana L√≥pez - ana@fashionos.co'
    };
    
    // await whatsapp.sendSponsorWelcome(sponsor);

    console.log('‚úÖ Integration examples ready. Uncomment lines to test.');
}

// Run examples if this file is executed directly
if (require.main === module) {
    examples().catch(console.error);
}

module.exports = FashionOSWhatsApp;