create table public.event_vendors (
  id uuid not null default gen_random_uuid (),
  event_id bigint null,
  vendor_id uuid null,
  service_type character varying(100) null,
  service_description text null,
  booking_status character varying(50) null default 'inquiry'::character varying,
  quoted_price numeric(12, 2) null,
  final_price numeric(12, 2) null,
  deposit_required numeric(12, 2) null,
  deposit_paid boolean null default false,
  setup_start timestamp with time zone null,
  service_start timestamp with time zone null,
  service_end timestamp with time zone null,
  breakdown_complete timestamp with time zone null,
  performance_rating integer null,
  performance_notes text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint event_vendors_pkey primary key (id),
  constraint event_vendors_event_id_fkey foreign KEY (event_id) references events (id) on delete CASCADE,
  constraint event_vendors_vendor_id_fkey foreign KEY (vendor_id) references vendor_profiles (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.vendor_profiles (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  business_name character varying(255) not null,
  business_type character varying(100) null,
  tax_id character varying(50) null,
  insurance_number character varying(100) null,
  primary_service character varying(100) null,
  service_categories text[] null,
  service_description text null,
  max_events_per_month integer null,
  team_size integer null,
  service_radius_km integer null,
  pricing_structure jsonb null,
  minimum_booking_value numeric(12, 2) null,
  total_events_serviced integer null default 0,
  average_rating numeric(3, 2) null default 0.0,
  on_time_delivery_rate numeric(5, 2) null default 100.0,
  portfolio_urls text[] null,
  certifications jsonb null,
  awards text[] null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint vendor_profiles_pkey primary key (id),
  constraint vendor_profiles_user_id_key unique (user_id),
  constraint vendor_profiles_user_id_fkey foreign KEY (user_id) references users (id)
) TABLESPACE pg_default;


create table public.event_venues (
  id uuid not null default gen_random_uuid (),
  event_id bigint null,
  venue_id uuid null,
  booking_status character varying(50) null default 'inquiry'::character varying,
  booking_date date null,
  setup_time time without time zone null,
  event_time time without time zone null,
  breakdown_time time without time zone null,
  rental_cost numeric(12, 2) null,
  additional_services_cost numeric(12, 2) null,
  deposit_amount numeric(12, 2) null,
  deposit_paid boolean null default false,
  space_configuration text null,
  equipment_needed text[] null,
  staff_needed integer null,
  special_requirements text null,
  contract_signed boolean null default false,
  contract_url text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint event_venues_pkey primary key (id),
  constraint event_venues_event_id_fkey foreign KEY (event_id) references events (id) on delete CASCADE,
  constraint event_venues_venue_id_fkey foreign KEY (venue_id) references venue_profiles (id) on delete CASCADE
) TABLESPACE pg_default;


create table public.venues (
  id bigint generated always as identity not null,
  name text not null,
  slug text not null,
  address text not null,
  city text null default 'Medell√≠n'::text,
  state text null default 'Antioquia'::text,
  country text null default 'Colombia'::text,
  postal_code text null,
  phone text null,
  whatsapp text null,
  email text null,
  website text null,
  instagram text null,
  facebook text null,
  tiktok text null,
  google_maps_url text null,
  capacity integer null,
  venue_type text null,
  amenities jsonb null,
  images jsonb null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  constraint venues_pkey primary key (id),
  constraint venues_slug_key unique (slug)
) TABLESPACE pg_default;

create trigger update_venues_updated_at BEFORE
update on venues for EACH row
execute FUNCTION update_updated_at_column ();

create table public.venue_profiles (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  venue_name character varying(255) not null,
  capacity integer null,
  venue_type character varying(100) null,
  amenities text[] null,
  location_details jsonb null,
  pricing_structure jsonb null,
  availability_calendar jsonb null,
  created_at timestamp with time zone null default now(),
  constraint venue_profiles_pkey primary key (id),
  constraint venue_profiles_user_id_key unique (user_id),
  constraint venue_profiles_user_id_fkey foreign KEY (user_id) references users (id)
) TABLESPACE pg_default;




